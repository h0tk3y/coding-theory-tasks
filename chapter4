Задание 3
---------

H = 

1 1 0 1 1 1 0 0 1 1  (+ III)
1 0 0 1 1 0 1 1 0 1
0 0 1 0 1 1 1 0 0 1
0 0 0 1 1 0 0 1 1 0
^   ^             ^
  
~ 

1 1 1 1 0 0 1 0 1 0
1 0 0 1 1 0 1 1 0 1  (+ I)
0 0 1 0 1 1 1 0 0 1  (+ I)
0 0 0 1 1 0 0 1 1 0

~

1 1 1 1 0 0 1 0 1 0
0 0 0 1 1 0 0 1 1 0
0 1 1 0 1 0 0 1 1 1  (+ II)
1 1 0 1 1 1 0 0 1 1

~

1 1 1 1 0 0 1 0 1 0
0 0 0 1 1 0 0 1 1 0
0 1 1 1 0 0 0 0 0 1  (move III to IV)
1 1 0 1 1 1 0 0 1 1  (move IV to III)

~

1 1 1 1 0 0 1 0 1 0  (+ III)
0 0 0 1 1 0 0 1 1 0  (+ III)
1 0 1 0 1 1 0 0 1 0  
0 1 1 1 0 0 0 0 0 1  

~

0 1 0 1 1 1 1 0 0 0
1 0 1 1 0 1 0 1 0 0
1 0 1 0 1 1 0 0 1 0  
0 1 1 1 0 0 0 0 0 1 
   P^T     |   E
   
--------------------------------------------

G = 

1 0 0 0 0 0 0 1 1 0
0 1 0 0 0 0 1 0 0 1
0 0 1 0 0 0 0 1 1 1
0 0 0 1 0 0 1 1 0 1
0 0 0 0 1 0 1 0 1 0
0 0 0 0 0 1 1 1 1 0
     E     |   P
     
Скорость кода: k / n = 6 / 10     
Минимальное расстояние равно минимальному размеру ЛЗ-набора столбцов H. Двух одинаковых столбцов нет, но есть три линейно зависимых (I + III = X, отмечены символом ^), значит, d = 3.

Задание 7
---------

Синдром s = e * H^T, где e -- вектор ошибки. Учитывая d = 3, исправить можно только одну ошибку, значит, векторы ошибок имеют ровно по одной единице.

e = 1 0 0 0 0 0 0 0 0 0 => s = 1 1 0 0 
e = 0 1 0 0 0 0 0 0 0 0 => s = 1 0 0 0
e = 0 0 1 0 0 0 0 0 0 0 => s = 0 0 1 0
e = 0 0 0 1 0 0 0 0 0 0 => s = 1 1 0 1
e = 0 0 0 0 1 0 0 0 0 0 => s = 1 1 1 1
e = 0 0 0 0 0 1 0 0 0 0 => s = 1 0 1 0
e = 0 0 0 0 0 0 1 0 0 0 => s = 0 1 1 0
e = 0 0 0 0 0 0 0 1 0 0 => s = 0 1 0 1
e = 0 0 0 0 0 0 0 0 1 0 => s = 1 0 0 1
e = 0 0 0 0 0 0 0 0 0 1 => s = 1 1 1 0
